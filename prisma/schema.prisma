// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

model User {
  id           Int                  @id @default(autoincrement())
  email        String               @unique
  name         String
  role         String[]             @default(["user"])
  applications UsersOnApplication[]
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt

  Application   Application? @relation(fields: [applicationId], references: [id])
  applicationId Int?
}

model Application {
  id        Int                  @id @default(autoincrement())
  role      Position             @relation(fields: [roleId], references: [id])
  roleId    Int                  @unique
  message   String?
  status    Status               @default(pending)
  comments  Comment[]
  users     UsersOnApplication[]
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt

  User User[]
}

enum Status {
  pending
  accepted
  rejected
}

model UsersOnApplication {
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@id([userId, applicationId])
}

model Position {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  open        Boolean
  application Application[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Comment {
  id            Int         @id @default(autoincrement())
  message       String
  from          String
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
